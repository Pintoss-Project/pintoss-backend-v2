spring:
  security:
    oauth2:
      client:
        provider:
          kakao:
            # 인가 코드 요청하는 URI (kauth. 인증 서버)
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            # AccessToken 요청하는 URI (kauth. 인증 서버)
            token-uri: https://kauth.kakao.com/oauth/token
            # 유저정보 받아오는 URI (kapi. 리소스 서버)
            user-info-uri: https://kapi.kakao.com/v2/user/me
            #
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          kakao:
            # REST API KEY
            client-id: d7afb61dceeb9073494b91ca9bb5d709
            # 내 애플리케이션 > 카카오 로그인 > 보안 > Client(내 애플리케이션) Secret
            client-secret: ZWk3U8JyrYrvDoCRL2eAWjqI2BXF04Yw

            # 클라이언트를 구분하기 위한 이름. 개발자와 사용자 편의를 위한 속성.
            client-name: Kakao
            # 사용자가 카카오로 로그인 후 돌아올 서버의 URL -> 카카오가 로그인 인증 처리 후 사용자를 내 애플리케이션으로 이동시킬 수 있다.
            # /login/oauth2/code/kakao가 oauth2의 기본 경. 여기로 오면 인가 코드를 받아서 인증 코드를 재요청하는 작업까지 이루어진다.
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao

            # 인가 타입으로, 인가 토큰을 받은 후 AccessToken을 요청할 때 지정되는 속성
            authorization-grant-type: authorization_code
            # AccessToken을 요청할 때 인증 서버로 요청하는 메서드를 설정
            client-authentication-method: client_secret_post
            # 동의항목. 프로필, 이메일 등 사용자 정보 요청 범위를 지정하는 속성이다.
            scope:
              - profile_nickname
              - account_email
          naver:
            client-id: HMmjgse8itLNY3OiKRQx
            client-secret: OVfMXxOdFb
            client-name: Naver
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - mobile
